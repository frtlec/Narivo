@page "/members"
@inject IMemberService MemberApi
@inject NavigationManager NavigationManager
<h3>Members</h3>

@if (members == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>SurName</th>
                <th>Email</th>
                <th>Phone</th>
                <th>Action</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var member in members)
            {
                var localMemberId = member.Id;
                <tr>
                    <td>@member.Id</td>
                    <td>@member.Name</td>
                    <td>@member.SurName</td>
                    <td>@member.Email</td>
                    <td>@member.PhoneNumber</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => OnNavigateToOrders(member.Id)">Siparişler</button>
                    </td>
                    <td>
                          <button class="btn btn-success" @onclick="() => OnNavigateToProducts(member.Id)">Sipariş ver</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<MemberDto> members;

    protected override async Task OnInitializedAsync()
    {
        members = await MemberApi.GetAllMembers();
    }

    private void OnNavigateToProducts(int memberId)
    {
        AppState.SetMemberId(memberId);
        NavigationManager.NavigateTo($"/products", forceLoad: true);
    }
    private void OnNavigateToOrders(int memberId)
    {
        AppState.SetMemberId(memberId);
        NavigationManager.NavigateTo($"/orders", forceLoad: true);
    }
}